app FindCar {
  wasp: {
    version: "^0.11.1"
  },
  title: "FindCar",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id       Int    @id @default(autoincrement())
    username String @unique
    password String
    cars     Car[]
psl=}

entity Car {=psl
    id           Int    @id @default(autoincrement())
    name         String @unique
    price        Int
    releasedYear Int
    user         User   @relation(fields: [userId], references: [id])
    userId       Int
psl=}

action findNewCar {
  fn: import { findNewCar } from "@server/actions.js",
  entities: [Car]
}

query getCar {
  fn: import { getCar } from "@server/queries.js",
  entities: [Car]
}

query getCarsUnder15Lakh {
  fn: import { getCarsUnder15Lakh } from "@server/queries.js",
  entities: [Car]
}

route DashboardRoute { path: "/", to: DashboardPage }
page DashboardPage {
  component: import { DashboardPage } from "@client/pages/Dashboard.jsx",
  authRequired: true
}

route CarRoute { path: "/car/:carId", to: CarPage }
page CarPage {
  component: import { CarPage } from "@client/pages/Car.jsx",
  authRequired: true
}
